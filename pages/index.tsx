import Head from "next/head";
import Image from "next/image";
import { useState, useEffect } from "react";
import styles from "../styles/Home.module.css";
import Events from "../components/Events";

type EONETEvent = {
  events: [
    {
      id: string;
      title: string;
      geometry: [
        {
          date: string;
          coordinates: [string, string];
        }
      ];
    }
  ];
};

export default function Home() {
  const [category, setCategory] = useState<String>("wildfires");
  const [limit, setLimit] = useState<Number>(6);
  const [nasaData, setNasaData] = useState<EONETEvent>();

  const NASA_API_KEY = "ijz7SNQHjWKEmWblGRlmfPq3nCPhg6LuCNyjZcgb";
  const EONET_API_URL = `https://eonet.gsfc.nasa.gov/api/v3/events?start=2005-01-01&end=2021-12-31&limit=${limit}&category=${category}&key=`;

  // Fetch the data
  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await fetch(EONET_API_URL + NASA_API_KEY);
        const data = await response.json();
        setNasaData(data);
      } catch (error) {
        console.log(error);
      }
    };
    fetchData();
  }, [category, limit, EONET_API_URL]);

  // Return loading while data is not fetched
  !nasaData && <div>Loading...</div>;
  console.log({ nasaData });

  let nasaElements = nasaData?.events.map((element) => (
    <Events
      key={element.id}
      category={category!}
      coordinates={element.geometry[0].coordinates}
      id={element.id}
      date={element.geometry[0].date}
      title={element.title}
    ></Events>
  ));

  return (
    <>
      <Head>
        <title>Natural Events Visualizer</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <main>
        <div className={styles.navigation}>
          <div className="btn-group">
            <button
              className="btn btn-secondary dropdown-toggle"
              type="button"
              data-bs-toggle="dropdown"
              data-bs-auto-close="true"
              aria-expanded="false"
              style={{ margin: "1rem" }}
            >
              Categories
            </button>

            <ul className="dropdown-menu">
              <li>
                <a
                  href="##"
                  className="dropdown-item"
                  onClick={() => setCategory("wildfires")}
                >
                  Wildfire
                </a>
              </li>

              <li>
                <a
                  href="##"
                  className="dropdown-item"
                  onClick={() => setCategory("volcanoes")}
                >
                  Volcanoes
                </a>
              </li>
            </ul>
          </div>
          <div className="dropdown">
            <button
              className="btn btn-secondary dropdown-toggle"
              type="button"
              data-bs-toggle="dropdown"
              aria-expanded="false"
            >
              Amount of events
            </button>
            <ul className="dropdown-menu">
              <li>
                <a
                  href="##"
                  className="dropdown-item"
                  onClick={() => setLimit(5)}
                >
                  6
                </a>
              </li>
              <li>
                <a
                  href="##"
                  className="dropdown-item"
                  onClick={() => setLimit(12)}
                >
                  12
                </a>
              </li>
              <li>
                <a
                  href="##"
                  className="dropdown-item"
                  onClick={() => setLimit(24)}
                >
                  24
                </a>
              </li>
            </ul>
          </div>
        </div>
      </main>
    </>
  );
}
